{
    "type": "object",
    "properties": {
        "backendService": {
            "required": true,
            "type": "string"
        },
        "project": {
            "required": true,
            "type": "string"
        },
        "requestId": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "userIp": {
            "type": "string"
        },
        "requestBody": {
            "description": "A BackendService resource. This resource defines a group of backend virtual machines and their serving capacity. (== resource_for v1.backendService ==) (== resource_for beta.backendService ==)",
            "properties": {
                "affinityCookieTtlSec": {
                    "description": "Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.\n\nWhen the load balancing scheme is INTERNAL, this field is not used.",
                    "format": "int32",
                    "type": "integer"
                },
                "backends": {
                    "description": "The list of backends that serve this BackendService.",
                    "items": {
                        "description": "Message containing information of one individual backend.",
                        "properties": {
                            "balancingMode": {
                                "description": "Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).\n\nFor Internal Load Balancing, the default and only supported mode is CONNECTION.",
                                "enum": [
                                    "CONNECTION",
                                    "RATE",
                                    "UTILIZATION"
                                ],
                                "type": "string"
                            },
                            "capacityScaler": {
                                "description": "A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0].\n\nThis cannot be used for internal load balancing.",
                                "format": "float",
                                "type": "number"
                            },
                            "description": {
                                "description": "An optional description of this resource. Provide this property when you create the resource.",
                                "type": "string"
                            },
                            "group": {
                                "description": "The fully-qualified URL of an Instance Group or Network Endpoint Group resource. In case of instance group this defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource.\n\nFor Network Endpoint Groups this defines list of endpoints. All endpoints of Network Endpoint Group must be hosted on instances located in the same zone as the Network Endpoint Group.\n\nBackend service can not contain mix of Instance Group and Network Endpoint Group backends.\n\nNote that you must specify an Instance Group or Network Endpoint Group resource using the fully-qualified URL, rather than a partial URL.\n\nWhen the BackendService has load balancing scheme INTERNAL, the instance group must be within the same region as the BackendService. Network Endpoint Groups are not supported for INTERNAL load balancing scheme.",
                                "type": "string"
                            },
                            "maxConnections": {
                                "description": "The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.\n\nThis cannot be used for internal load balancing.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "maxConnectionsPerInstance": {
                                "description": "The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.\n\nThis cannot be used for internal load balancing.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "maxRate": {
                                "description": "The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.\n\nThis cannot be used for internal load balancing.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "maxRatePerInstance": {
                                "description": "The max requests per second (RPS) that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.\n\nThis cannot be used for internal load balancing.",
                                "format": "float",
                                "type": "number"
                            },
                            "maxUtilization": {
                                "description": "Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0].\n\nThis cannot be used for internal load balancing.",
                                "format": "float",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "cdnPolicy": {
                    "description": "Cloud CDN configuration for this BackendService.",
                    "properties": {
                        "cacheKeyPolicy": {
                            "description": "The CacheKeyPolicy for this CdnPolicy.",
                            "properties": {
                                "includeHost": {
                                    "description": "If true, requests to different hosts will be cached separately.",
                                    "type": "boolean"
                                },
                                "includeProtocol": {
                                    "description": "If true, http and https requests will be cached separately.",
                                    "type": "boolean"
                                },
                                "includeQueryString": {
                                    "description": "If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.",
                                    "type": "boolean"
                                },
                                "queryStringBlacklist": {
                                    "description": "Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "queryStringWhitelist": {
                                    "description": "Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "signedUrlCacheMaxAgeSec": {
                            "description": "Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served. Defaults to 1hr (3600s). When serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a \"Cache-Control: public, max-age=[TTL]\" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.",
                            "format": "int64",
                            "type": "string"
                        },
                        "signedUrlKeyNames": {
                            "description": "[Output Only] Names of the keys for signing request URLs.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "connectionDraining": {
                    "description": "Message containing connection draining configuration.",
                    "properties": {
                        "drainingTimeoutSec": {
                            "description": "Time for which instance will be drained (not accept new connections, but still work to finish started).",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "creationTimestamp": {
                    "description": "[Output Only] Creation timestamp in RFC3339 text format.",
                    "type": "string"
                },
                "customRequestHeaders": {
                    "description": "Headers that the HTTP/S load balancer should add to proxied requests.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "An optional description of this resource. Provide this property when you create the resource.",
                    "type": "string"
                },
                "enableCDN": {
                    "description": "If true, enable Cloud CDN for this BackendService.\n\nWhen the load balancing scheme is INTERNAL, this field is not used.",
                    "type": "boolean"
                },
                "fingerprint": {
                    "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService, otherwise the request will fail with error 412 conditionNotMet.\n\nTo see the latest fingerprint, make a get() request to retrieve a BackendService.",
                    "format": "byte",
                    "type": "string"
                },
                "healthChecks": {
                    "description": "The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required for Compute Engine backend services. A health check must not be specified for App Engine backend and Cloud Function backend.\n\nFor internal load balancing, a URL to a HealthCheck resource must be specified instead.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "iap": {
                    "description": "Identity-Aware Proxy",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "oauth2ClientId": {
                            "type": "string"
                        },
                        "oauth2ClientSecret": {
                            "type": "string"
                        },
                        "oauth2ClientSecretSha256": {
                            "description": "[Output Only] SHA256 hash value for the field oauth2_client_secret above.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#backendService",
                    "description": "[Output Only] Type of resource. Always compute#backendService for backend services.",
                    "type": "string"
                },
                "loadBalancingScheme": {
                    "description": "Indicates whether the backend service will be used with internal or external load balancing. A backend service created for one type of load balancing cannot be used with the other. Possible values are INTERNAL and EXTERNAL.",
                    "enum": [
                        "EXTERNAL",
                        "INTERNAL",
                        "INVALID_LOAD_BALANCING_SCHEME"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "port": {
                    "description": "Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80.\n\nThis cannot be used for internal load balancing.",
                    "format": "int32",
                    "type": "integer"
                },
                "portName": {
                    "description": "Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.\n\nWhen the load balancing scheme is INTERNAL, this field is not used.",
                    "type": "string"
                },
                "protocol": {
                    "description": "The protocol this BackendService uses to communicate with backends.\n\nPossible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP.\n\nFor internal load balancing, the possible values are TCP and UDP, and the default is TCP.",
                    "enum": [
                        "HTTP",
                        "HTTP2",
                        "HTTPS",
                        "SSL",
                        "TCP",
                        "UDP"
                    ],
                    "type": "string"
                },
                "region": {
                    "description": "[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.",
                    "type": "string"
                },
                "securityPolicy": {
                    "description": "[Output Only] The resource URL for the security policy associated with this backend service.",
                    "type": "string"
                },
                "selfLink": {
                    "description": "[Output Only] Server-defined URL for the resource.",
                    "type": "string"
                },
                "sessionAffinity": {
                    "description": "Type of session affinity to use. The default is NONE.\n\nWhen the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE.\n\nWhen the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO.\n\nWhen the protocol is UDP, this field is not used.",
                    "enum": [
                        "CLIENT_IP",
                        "CLIENT_IP_PORT_PROTO",
                        "CLIENT_IP_PROTO",
                        "GENERATED_COOKIE",
                        "NONE"
                    ],
                    "type": "string"
                },
                "timeoutSec": {
                    "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        }
    }
}