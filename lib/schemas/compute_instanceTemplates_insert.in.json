{
    "type": "object",
    "properties": {
        "project": {
            "required": true,
            "type": "string"
        },
        "requestId": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "userIp": {
            "type": "string"
        },
        "requestBody": {
            "description": "An Instance Template resource. (== resource_for beta.instanceTemplates ==) (== resource_for v1.instanceTemplates ==)",
            "properties": {
                "creationTimestamp": {
                    "description": "[Output Only] The creation timestamp for this instance template in RFC3339 text format.",
                    "type": "string"
                },
                "description": {
                    "description": "An optional description of this resource. Provide this property when you create the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "[Output Only] A unique identifier for this instance template. The server defines this identifier.",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#instanceTemplate",
                    "description": "[Output Only] The resource type, which is always compute#instanceTemplate for instance templates.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "properties": {
                    "description": "The instance properties for this instance template.",
                    "properties": {
                        "canIpForward": {
                            "description": "Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.",
                            "type": "boolean"
                        },
                        "description": {
                            "description": "An optional text description for the instances that are created from this instance template.",
                            "type": "string"
                        },
                        "disks": {
                            "description": "An array of disks that are associated with the instances that are created from this template.",
                            "items": {
                                "description": "An instance-attached disk resource.",
                                "properties": {
                                    "autoDelete": {
                                        "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                                        "type": "boolean"
                                    },
                                    "boot": {
                                        "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
                                        "type": "boolean"
                                    },
                                    "deviceName": {
                                        "description": "Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.\n\nIf not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
                                        "type": "string"
                                    },
                                    "diskEncryptionKey": {
                                        "description": "Encrypts or decrypts a disk using a customer-supplied encryption key.\n\nIf you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key.\n\nIf you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance.\n\nIf you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.\n\nInstance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.",
                                        "properties": {
                                            "kmsKeyName": {
                                                "description": "The name of the encryption key that is stored in Google Cloud KMS.",
                                                "type": "string"
                                            },
                                            "rawKey": {
                                                "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
                                                "type": "string"
                                            },
                                            "sha256": {
                                                "description": "[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "guestOsFeatures": {
                                        "description": "A list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options.",
                                        "items": {
                                            "description": "Guest OS features.",
                                            "properties": {
                                                "type": {
                                                    "description": "The ID of a supported feature. Read  Enabling guest operating system features to see a list of available options.",
                                                    "enum": [
                                                        "FEATURE_TYPE_UNSPECIFIED",
                                                        "MULTI_IP_SUBNET",
                                                        "SECURE_BOOT",
                                                        "UEFI_COMPATIBLE",
                                                        "VIRTIO_SCSI_MULTIQUEUE",
                                                        "WINDOWS"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "index": {
                                        "description": "[Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "initializeParams": {
                                        "description": "[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.\n\nThis property is mutually exclusive with the source property; you can only define one or the other, but not both.",
                                        "properties": {
                                            "description": {
                                                "description": "An optional description. Provide this property when creating the disk.",
                                                "type": "string"
                                            },
                                            "diskName": {
                                                "description": "Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.",
                                                "type": "string"
                                            },
                                            "diskSizeGb": {
                                                "description": "Specifies the size of the disk in base-2 GB.",
                                                "format": "int64",
                                                "type": "string"
                                            },
                                            "diskType": {
                                                "description": "Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example:\nhttps://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard\n\n\nOther values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType \n- projects/project/zones/zone/diskTypes/diskType \n- zones/zone/diskTypes/diskType  Note that for InstanceTemplate, this is the name of the disk type, not URL.",
                                                "type": "string"
                                            },
                                            "labels": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "description": "Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.",
                                                "type": "object"
                                            },
                                            "sourceImage": {
                                                "description": "The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required except for local SSD.\n\nTo create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image:\nprojects/debian-cloud/global/images/family/debian-9\n\n\nAlternatively, use a specific version of a public operating system image:\nprojects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD\n\n\nTo create a disk with a custom image that you created, specify the image name in the following format:\nglobal/images/my-custom-image\n\n\nYou can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:\nglobal/images/family/my-image-family\n\n\nIf the source image is deleted later, this field will not be set.",
                                                "type": "string"
                                            },
                                            "sourceImageEncryptionKey": {
                                                "description": "The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.\n\nInstance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.",
                                                "properties": {
                                                    "kmsKeyName": {
                                                        "description": "The name of the encryption key that is stored in Google Cloud KMS.",
                                                        "type": "string"
                                                    },
                                                    "rawKey": {
                                                        "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
                                                        "type": "string"
                                                    },
                                                    "sha256": {
                                                        "description": "[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "interface": {
                                        "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.",
                                        "enum": [
                                            "NVME",
                                            "SCSI"
                                        ],
                                        "type": "string"
                                    },
                                    "kind": {
                                        "default": "compute#attachedDisk",
                                        "description": "[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.",
                                        "type": "string"
                                    },
                                    "licenses": {
                                        "description": "[Output Only] Any valid publicly visible licenses.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "mode": {
                                        "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                                        "enum": [
                                            "READ_ONLY",
                                            "READ_WRITE"
                                        ],
                                        "type": "string"
                                    },
                                    "source": {
                                        "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required except for local SSD.\n\nIf desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.\n\nNote that for InstanceTemplate, specify the disk name, not the URL for the disk.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                        "enum": [
                                            "PERSISTENT",
                                            "SCRATCH"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "guestAccelerators": {
                            "description": "A list of guest accelerator cards' type and count to use for instances created from the instance template.",
                            "items": {
                                "description": "A specification of the type and number of accelerator cards attached to the instance.",
                                "properties": {
                                    "acceleratorCount": {
                                        "description": "The number of the guest accelerator cards exposed to this instance.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "acceleratorType": {
                                        "description": "Full or partial URL of the accelerator type resource to attach to this instance. For example: projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100 If you are creating an instance template, specify only the accelerator name. See GPUs on Compute Engine for a full list of accelerator types.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "labels": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "description": "Labels to apply to instances that are created from this template.",
                            "type": "object"
                        },
                        "machineType": {
                            "description": "The machine type to use for instances that are created from this template.",
                            "type": "string"
                        },
                        "metadata": {
                            "description": "The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.",
                            "properties": {
                                "fingerprint": {
                                    "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet.\n\nTo see the latest fingerprint, make a get() request to retrieve the resource.",
                                    "format": "byte",
                                    "type": "string"
                                },
                                "items": {
                                    "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                                                "pattern": "[a-zA-Z0-9-_]{1,128}",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 262144 bytes (256 KiB).",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "kind": {
                                    "default": "compute#metadata",
                                    "description": "[Output Only] Type of the resource. Always compute#metadata for metadata.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "minCpuPlatform": {
                            "description": "Minimum cpu/platform to be used by this instance. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\". For more information, read Specifying a Minimum CPU Platform.",
                            "type": "string"
                        },
                        "networkInterfaces": {
                            "description": "An array of network access configurations for this interface.",
                            "items": {
                                "description": "A network interface resource attached to an instance.",
                                "properties": {
                                    "accessConfigs": {
                                        "description": "An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
                                        "items": {
                                            "description": "An access configuration attached to an instance's network interface. Only one access config per instance is supported.",
                                            "properties": {
                                                "kind": {
                                                    "default": "compute#accessConfig",
                                                    "description": "[Output Only] Type of the resource. Always compute#accessConfig for access configs.",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.",
                                                    "type": "string"
                                                },
                                                "natIP": {
                                                    "description": "An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.",
                                                    "type": "string"
                                                },
                                                "networkTier": {
                                                    "description": "This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD.\n\nIf an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier.\n\nIf an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.",
                                                    "enum": [
                                                        "PREMIUM",
                                                        "STANDARD"
                                                    ],
                                                    "type": "string"
                                                },
                                                "publicPtrDomainName": {
                                                    "description": "The DNS domain name for the public PTR record. This field can only be set when the set_public_ptr field is enabled.",
                                                    "type": "string"
                                                },
                                                "setPublicPtr": {
                                                    "description": "Specifies whether a public DNS ?PTR? record should be created to map the external IP address of the instance to a DNS domain name.",
                                                    "type": "boolean"
                                                },
                                                "type": {
                                                    "default": "ONE_TO_ONE_NAT",
                                                    "description": "The type of configuration. The default and only option is ONE_TO_ONE_NAT.",
                                                    "enum": [
                                                        "ONE_TO_ONE_NAT"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "aliasIpRanges": {
                                        "description": "An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.",
                                        "items": {
                                            "description": "An alias IP range attached to an instance's network interface.",
                                            "properties": {
                                                "ipCidrRange": {
                                                    "description": "The IP CIDR range represented by this alias IP range. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).",
                                                    "type": "string"
                                                },
                                                "subnetworkRangeName": {
                                                    "description": "Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "fingerprint": {
                                        "description": "Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface, otherwise the request will fail with error 412 conditionNotMet.",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "default": "compute#networkInterface",
                                        "description": "[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.",
                                        "type": "string"
                                    },
                                    "network": {
                                        "description": "URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.\n\nThis field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used.\n\nIf you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/project/global/networks/network \n- projects/project/global/networks/network \n- global/networks/default",
                                        "type": "string"
                                    },
                                    "networkIP": {
                                        "description": "An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.",
                                        "type": "string"
                                    },
                                    "subnetwork": {
                                        "description": "The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork \n- regions/region/subnetworks/subnetwork",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "scheduling": {
                            "description": "Specifies the scheduling options for the instances that are created from this template.",
                            "properties": {
                                "automaticRestart": {
                                    "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.\n\nBy default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.",
                                    "type": "boolean"
                                },
                                "nodeAffinities": {
                                    "description": "A set of node affinity and anti-affinity.",
                                    "items": {
                                        "description": "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled.",
                                        "properties": {
                                            "key": {
                                                "description": "Corresponds to the label key of Node resource.",
                                                "type": "string"
                                            },
                                            "operator": {
                                                "description": "Defines the operation of node selection.",
                                                "enum": [
                                                    "IN",
                                                    "NOT_IN",
                                                    "OPERATOR_UNSPECIFIED"
                                                ],
                                                "type": "string"
                                            },
                                            "values": {
                                                "description": "Corresponds to the label values of Node resource.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "onHostMaintenance": {
                                    "description": "Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.",
                                    "enum": [
                                        "MIGRATE",
                                        "TERMINATE"
                                    ],
                                    "type": "string"
                                },
                                "preemptible": {
                                    "description": "Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "serviceAccounts": {
                            "description": "A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this template. Use metadata queries to obtain the access tokens for these instances.",
                            "items": {
                                "description": "A service account.",
                                "properties": {
                                    "email": {
                                        "description": "Email address of the service account.",
                                        "type": "string"
                                    },
                                    "scopes": {
                                        "description": "The list of scopes to be made available for this service account.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "tags": {
                            "description": "A list of tags to apply to the instances that are created from this template. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.",
                            "properties": {
                                "fingerprint": {
                                    "description": "Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags.\n\nTo see the latest fingerprint, make get() request to the instance.",
                                    "format": "byte",
                                    "type": "string"
                                },
                                "items": {
                                    "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "selfLink": {
                    "description": "[Output Only] The URL for this instance template. The server defines this URL.",
                    "type": "string"
                },
                "sourceInstance": {
                    "description": "The source instance used to create the template. You can provide this as a partial or full URL to the resource. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance \n- projects/project/zones/zone/instances/instance",
                    "type": "string"
                },
                "sourceInstanceParams": {
                    "description": "The source instance params to use to create this instance template.",
                    "properties": {
                        "diskConfigs": {
                            "description": "Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, new custom images will be created from each disk. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.",
                            "items": {
                                "description": "A specification of the desired way to instantiate a disk in the instance template when its created from a source instance.",
                                "properties": {
                                    "autoDelete": {
                                        "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                                        "type": "boolean"
                                    },
                                    "customImage": {
                                        "description": "The custom source image to be used to restore this disk when instantiating this instance template.",
                                        "type": "string"
                                    },
                                    "deviceName": {
                                        "description": "Specifies the device name of the disk to which the configurations apply to.",
                                        "type": "string"
                                    },
                                    "instantiateFrom": {
                                        "description": "Specifies whether to include the disk and what image to use. Possible values are:  \n- source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. \n- source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. \n- custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. \n- attach-read-only: to attach a read-only disk. Applicable to read-only disks. \n- do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks.",
                                        "enum": [
                                            "ATTACH_READ_ONLY",
                                            "BLANK",
                                            "CUSTOM_IMAGE",
                                            "DEFAULT",
                                            "DO_NOT_INCLUDE",
                                            "SOURCE_IMAGE",
                                            "SOURCE_IMAGE_FAMILY"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    }
}