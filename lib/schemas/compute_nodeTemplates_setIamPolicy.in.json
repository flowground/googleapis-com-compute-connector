{
    "type": "object",
    "properties": {
        "project": {
            "required": true,
            "type": "string"
        },
        "region": {
            "required": true,
            "type": "string"
        },
        "resource": {
            "required": true,
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "userIp": {
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "bindings": {
                    "description": "Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use 'policy' to specify bindings.",
                    "items": {
                        "description": "Associates `members` with a `role`.",
                        "properties": {
                            "condition": {
                                "description": "Unimplemented. The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.",
                                "properties": {
                                    "description": {
                                        "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                                        "type": "string"
                                    },
                                    "expression": {
                                        "description": "Textual representation of an expression in Common Expression Language syntax.\n\nThe application context of the containing message determines which well-known feature set of CEL is supported.",
                                        "type": "string"
                                    },
                                    "location": {
                                        "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "members": {
                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` .\n\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`.\n\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "role": {
                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.",
                    "format": "byte",
                    "type": "string"
                },
                "policy": {
                    "description": "REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.",
                    "properties": {
                        "auditConfigs": {
                            "description": "Specifies cloud audit logging configuration for this policy.",
                            "items": {
                                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n{ \"audit_configs\": [ { \"service\": \"allServices\" \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:foo@gmail.com\" ] }, { \"log_type\": \"DATA_WRITE\", }, { \"log_type\": \"ADMIN_READ\", } ] }, { \"service\": \"fooservice.googleapis.com\" \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:bar@gmail.com\" ] } ] } ] }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts foo@gmail.com from DATA_READ logging, and bar@gmail.com from DATA_WRITE logging.",
                                "properties": {
                                    "auditLogConfigs": {
                                        "description": "The configuration for logging of each type of permission.",
                                        "items": {
                                            "description": "Provides the configuration for logging a type of permissions. Example:\n\n{ \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:foo@gmail.com\" ] }, { \"log_type\": \"DATA_WRITE\", } ] }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting foo@gmail.com from DATA_READ logging.",
                                            "properties": {
                                                "exemptedMembers": {
                                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of [Binding.members][].",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "logType": {
                                                    "description": "The log type that this config enables.",
                                                    "enum": [
                                                        "ADMIN_READ",
                                                        "DATA_READ",
                                                        "DATA_WRITE",
                                                        "LOG_TYPE_UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "exemptedMembers": {
                                        "description": "",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "service": {
                                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "bindings": {
                            "description": "Associates a list of `members` to a `role`. `bindings` with no members will result in an error.",
                            "items": {
                                "description": "Associates `members` with a `role`.",
                                "properties": {
                                    "condition": {
                                        "description": "Unimplemented. The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.",
                                        "properties": {
                                            "description": {
                                                "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                                                "type": "string"
                                            },
                                            "expression": {
                                                "description": "Textual representation of an expression in Common Expression Language syntax.\n\nThe application context of the containing message determines which well-known feature set of CEL is supported.",
                                                "type": "string"
                                            },
                                            "location": {
                                                "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                                "type": "string"
                                            },
                                            "title": {
                                                "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "members": {
                                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` .\n\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`.\n\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "role": {
                                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "etag": {
                            "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.",
                            "format": "byte",
                            "type": "string"
                        },
                        "iamOwned": {
                            "description": "",
                            "type": "boolean"
                        },
                        "rules": {
                            "description": "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.",
                            "items": {
                                "description": "A rule to be applied in a Policy.",
                                "properties": {
                                    "action": {
                                        "description": "Required",
                                        "enum": [
                                            "ALLOW",
                                            "ALLOW_WITH_LOG",
                                            "DENY",
                                            "DENY_WITH_LOG",
                                            "LOG",
                                            "NO_ACTION"
                                        ],
                                        "type": "string"
                                    },
                                    "conditions": {
                                        "description": "Additional restrictions that must be met. All conditions must pass for the rule to match.",
                                        "items": {
                                            "description": "A condition to be met.",
                                            "properties": {
                                                "iam": {
                                                    "description": "Trusted attributes supplied by the IAM system.",
                                                    "enum": [
                                                        "APPROVER",
                                                        "ATTRIBUTION",
                                                        "AUTHORITY",
                                                        "CREDENTIALS_TYPE",
                                                        "JUSTIFICATION_TYPE",
                                                        "NO_ATTR",
                                                        "SECURITY_REALM"
                                                    ],
                                                    "type": "string"
                                                },
                                                "op": {
                                                    "description": "An operator to apply the subject with.",
                                                    "enum": [
                                                        "DISCHARGED",
                                                        "EQUALS",
                                                        "IN",
                                                        "NOT_EQUALS",
                                                        "NOT_IN",
                                                        "NO_OP"
                                                    ],
                                                    "type": "string"
                                                },
                                                "svc": {
                                                    "description": "Trusted attributes discharged by the service.",
                                                    "type": "string"
                                                },
                                                "sys": {
                                                    "description": "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.",
                                                    "enum": [
                                                        "IP",
                                                        "NAME",
                                                        "NO_ATTR",
                                                        "REGION",
                                                        "SERVICE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "values": {
                                                    "description": "The objects of the condition.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "description": {
                                        "description": "Human-readable description of the rule.",
                                        "type": "string"
                                    },
                                    "ins": {
                                        "description": "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "logConfigs": {
                                        "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries that match the LOG action.",
                                        "items": {
                                            "description": "Specifies what kind of log the caller must write",
                                            "properties": {
                                                "cloudAudit": {
                                                    "description": "Cloud audit options.",
                                                    "properties": {
                                                        "authorizationLoggingOptions": {
                                                            "description": "Information used by the Cloud Audit Logging pipeline.",
                                                            "properties": {
                                                                "permissionType": {
                                                                    "description": "The type of the permission that was checked.",
                                                                    "enum": [
                                                                        "ADMIN_READ",
                                                                        "ADMIN_WRITE",
                                                                        "DATA_READ",
                                                                        "DATA_WRITE",
                                                                        "PERMISSION_TYPE_UNSPECIFIED"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "logName": {
                                                            "description": "The log_name to populate in the Cloud Audit Record.",
                                                            "enum": [
                                                                "ADMIN_ACTIVITY",
                                                                "DATA_ACCESS",
                                                                "UNSPECIFIED_LOG_NAME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "counter": {
                                                    "description": "Counter options.",
                                                    "properties": {
                                                        "field": {
                                                            "description": "The field value to attribute.",
                                                            "type": "string"
                                                        },
                                                        "metric": {
                                                            "description": "The metric to update.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "dataAccess": {
                                                    "description": "Data access options.",
                                                    "properties": {
                                                        "logMode": {
                                                            "description": "Whether Gin logging should happen in a fail-closed manner at the caller. This is relevant only in the LocalIAM implementation, for now.\n\nNOTE: Logging to Gin in a fail-closed manner is currently unsupported while work is being done to satisfy the requirements of go/345. Currently, setting LOG_FAIL_CLOSED mode will have no effect, but still exists because there is active work being done to support it (b/115874152).",
                                                            "enum": [
                                                                "LOG_FAIL_CLOSED",
                                                                "LOG_MODE_UNSPECIFIED"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "notIns": {
                                        "description": "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "permissions": {
                                        "description": "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "version": {
                            "description": "Deprecated.",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    }
}