{
    "type": "object",
    "properties": {
        "autoscaler": {
            "type": "string"
        },
        "project": {
            "required": true,
            "type": "string"
        },
        "region": {
            "required": true,
            "type": "string"
        },
        "requestId": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "userIp": {
            "type": "string"
        },
        "requestBody": {
            "description": "Represents an Autoscaler resource. Autoscalers allow you to automatically scale virtual machine instances in managed instance groups according to an autoscaling policy that you define. For more information, read Autoscaling Groups of Instances. (== resource_for beta.autoscalers ==) (== resource_for v1.autoscalers ==) (== resource_for beta.regionAutoscalers ==) (== resource_for v1.regionAutoscalers ==)",
            "properties": {
                "autoscalingPolicy": {
                    "description": "The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.\n\nIf none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.",
                    "properties": {
                        "coolDownPeriodSec": {
                            "description": "The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.\n\nVirtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "cpuUtilization": {
                            "description": "Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.",
                            "properties": {
                                "utilizationTarget": {
                                    "description": "The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6.\n\nIf the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.\n\nIf the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "customMetricUtilizations": {
                            "description": "Configuration parameters of autoscaling based on a custom metric.",
                            "items": {
                                "description": "Custom utilization metric policy.",
                                "properties": {
                                    "metric": {
                                        "description": "The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values.\n\nThe metric must have a value type of INT64 or DOUBLE.",
                                        "type": "string"
                                    },
                                    "utilizationTarget": {
                                        "description": "The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric.\n\nFor example, a good metric to use as a utilization_target is compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value constant for each of the instances.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "utilizationTargetType": {
                                        "description": "Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.",
                                        "enum": [
                                            "DELTA_PER_MINUTE",
                                            "DELTA_PER_SECOND",
                                            "GAUGE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "loadBalancingUtilization": {
                            "description": "Configuration parameters of autoscaling based on load balancer.",
                            "properties": {
                                "utilizationTarget": {
                                    "description": "Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "maxNumReplicas": {
                            "description": "The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "minNumReplicas": {
                            "description": "The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "creationTimestamp": {
                    "description": "[Output Only] Creation timestamp in RFC3339 text format.",
                    "type": "string"
                },
                "description": {
                    "description": "An optional description of this resource. Provide this property when you create the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#autoscaler",
                    "description": "[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "region": {
                    "description": "[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "[Output Only] Server-defined URL for the resource.",
                    "type": "string"
                },
                "status": {
                    "description": "[Output Only] The status of the autoscaler configuration.",
                    "enum": [
                        "ACTIVE",
                        "DELETING",
                        "ERROR",
                        "PENDING"
                    ],
                    "type": "string"
                },
                "statusDetails": {
                    "description": "[Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.",
                    "items": {
                        "properties": {
                            "message": {
                                "description": "The status message.",
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of error returned.",
                                "enum": [
                                    "ALL_INSTANCES_UNHEALTHY",
                                    "BACKEND_SERVICE_DOES_NOT_EXIST",
                                    "CAPPED_AT_MAX_NUM_REPLICAS",
                                    "CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE",
                                    "CUSTOM_METRIC_INVALID",
                                    "MIN_EQUALS_MAX",
                                    "MISSING_CUSTOM_METRIC_DATA_POINTS",
                                    "MISSING_LOAD_BALANCING_DATA_POINTS",
                                    "MORE_THAN_ONE_BACKEND_SERVICE",
                                    "NOT_ENOUGH_QUOTA_AVAILABLE",
                                    "REGION_RESOURCE_STOCKOUT",
                                    "SCALING_TARGET_DOES_NOT_EXIST",
                                    "UNKNOWN",
                                    "UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION",
                                    "ZONE_RESOURCE_STOCKOUT"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "URL of the managed instance group that this autoscaler will scale.",
                    "type": "string"
                },
                "zone": {
                    "description": "[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).",
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}