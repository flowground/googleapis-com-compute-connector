{
    "type": "object",
    "properties": {
        "project": {
            "required": true,
            "type": "string"
        },
        "region": {
            "required": true,
            "type": "string"
        },
        "requestId": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "userIp": {
            "type": "string"
        },
        "requestBody": {
            "description": "A Subnetwork resource. (== resource_for beta.subnetworks ==) (== resource_for v1.subnetworks ==)",
            "properties": {
                "creationTimestamp": {
                    "description": "[Output Only] Creation timestamp in RFC3339 text format.",
                    "type": "string"
                },
                "description": {
                    "description": "An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.",
                    "type": "string"
                },
                "enableFlowLogs": {
                    "description": "Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is to disable flow logging.",
                    "type": "boolean"
                },
                "fingerprint": {
                    "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a Subnetwork. An up-to-date fingerprint must be provided in order to update the Subnetwork, otherwise the request will fail with error 412 conditionNotMet.\n\nTo see the latest fingerprint, make a get() request to retrieve a Subnetwork.",
                    "format": "byte",
                    "type": "string"
                },
                "gatewayAddress": {
                    "description": "[Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork.",
                    "type": "string"
                },
                "id": {
                    "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
                    "format": "uint64",
                    "type": "string"
                },
                "ipCidrRange": {
                    "description": "The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field can be set only at resource creation time.",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#subnetwork",
                    "description": "[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "network": {
                    "description": "The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. Only networks that are in the distributed mode can have subnetworks. This field can be set only at resource creation time.",
                    "type": "string"
                },
                "privateIpGoogleAccess": {
                    "description": "Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.",
                    "type": "boolean"
                },
                "region": {
                    "description": "URL of the region where the Subnetwork resides. This field can be set only at resource creation time.",
                    "type": "string"
                },
                "secondaryIpRanges": {
                    "description": "An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges. This field can be updated with a patch request.",
                    "items": {
                        "description": "Represents a secondary IP range of a subnetwork.",
                        "properties": {
                            "ipCidrRange": {
                                "description": "The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported.",
                                "type": "string"
                            },
                            "rangeName": {
                                "description": "The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "selfLink": {
                    "description": "[Output Only] Server-defined URL for the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}